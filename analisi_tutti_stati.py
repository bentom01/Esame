import numpy as np
import pandas as pd
import funzioni as fn
import matplotlib.pyplot as plt
from scipy import constants, fft, optimize

#importo il file csv
tab = pd.read_csv('pollution_us_2011_2013.csv')

#per trovare i codici degli stati
tab2 = tab[['State','State Code']]
tab3 = tab2.groupby(['State']).mean()
#print(tab3)

#scelgo solo le colonne che mi interessano
tab1 = tab[['State Code','Date Local', 'NO2 Mean']]

alad, alam = fn.stato(tab1, 1)
arid, arim = fn.stato(tab1, 4)
arkd, arkm = fn.stato(tab1, 5)
cald, calm = fn.stato(tab1, 6)
cold, colm = fn.stato(tab1, 8)
cond, conm = fn.stato(tab1, 9)
delad, delam = fn.stato(tab1, 10)
docd, docm = fn.stato(tab1, 11)
flod, flom = fn.stato(tab1, 12)
geod, geom = fn.stato(tab1, 13)
hawd, hawm = fn.stato(tab1, 15)
idad, idam = fn.stato(tab1, 16)
illd, illm = fn.stato(tab1, 17)
indd, indm = fn.stato(tab1, 18)
iowd, iowm = fn.stato(tab1, 19)
kand, kanm = fn.stato(tab1, 20)
kend, kenm = fn.stato(tab1, 21)
loud, loum = fn.stato(tab1, 22)
maid, maim = fn.stato(tab1, 23)
mard, marm = fn.stato(tab1, 24)
masd, masm = fn.stato(tab1, 25)
minnd, minnm = fn.stato(tab1, 27)
misd, mism = fn.stato(tab1, 29)
nevd, nevm = fn.stato(tab1, 32)
njd, njm = fn.stato(tab1, 34)
nmd, nmm = fn.stato(tab1, 35)
nyd, nym = fn.stato(tab1, 36)
ncd, ncm = fn.stato(tab1, 37)
ndd, ndm = fn.stato(tab1, 38)
ohd, ohm = fn.stato(tab1, 39)
okd, okm = fn.stato(tab1, 40)
ored, orem = fn.stato(tab1, 41)
pend, penm = fn.stato(tab1, 42)
rid, rim = fn.stato(tab1, 44)
sdd, sdm = fn.stato(tab1, 46)
texd, texm = fn.stato(tab1, 48)
utd, utm = fn.stato(tab1, 49)
vird, virm = fn.stato(tab1, 51)
wasd, wasm = fn.stato(tab1, 53)
wyod, wyom = fn.stato(tab1, 56)

#analisi di fourier
alatf, alasp, alafr, alamax = fn.trasf(alam)
aritf, arisp, arifr, arimax = fn.trasf(arim)
arktf, arksp, arkfr, arkmax = fn.trasf(arkm)
caltf, calsp, calfr, calmax = fn.trasf(calm)
coltf, colsp, colfr, colmax = fn.trasf(colm)
contf, consp, confr, conmax = fn.trasf(conm)
delatf, delasp, delafr, delamax = fn.trasf(delam)
doctf, docsp, docfr, docmax = fn.trasf(docm)
flotf, flosp, flofr, flomax = fn.trasf(flom)
geotf, geosp, geofr, geomax = fn.trasf(geom)
hawtf, hawsp, hawfr, hawmax = fn.trasf(hawm)
idatf, idasp, idafr, idamax = fn.trasf(idam)
illtf, illsp, illfr, illmax = fn.trasf(illm)
indtf, indsp, indfr, indmax = fn.trasf(indm)
iowtf, iowsp, iowfr, iowmax = fn.trasf(iowm)
kantf, kansp, kanfr, kanmax = fn.trasf(kanm)
kentf, kensp, kenfr, kenmax = fn.trasf(kenm)
loutf, lousp, loufr, loumax = fn.trasf(loum)
maitf, maisp, maifr, maimax = fn.trasf(maim)
martf, marsp, marfr, marmax = fn.trasf(marm)
mastf, massp, masfr, masmax = fn.trasf(masm)
minntf, minnsp, minnfr, minnmax = fn.trasf(minnm)
mistf, missp, misfr, mismax = fn.trasf(mism)
nevtf, nevsp, nevfr, nevmax = fn.trasf(nevm)
njtf, njsp, njfr, njmax = fn.trasf(njm)
nmtf, nmsp, nmfr, nmmax = fn.trasf(nmm)
nytf, nysp, nyfr, nymax = fn.trasf(nym)
nctf, ncsp, ncfr, ncmax = fn.trasf(ncm)
ndtf, ndsp, ndfr, ndmax = fn.trasf(ndm)
ohtf, ohsp, ohfr, ohmax = fn.trasf(ohm)
oktf, oksp, okfr, okmax = fn.trasf(okm)
oretf, oresp, orefr, oremax = fn.trasf(orem)
pentf, pensp, penfr, penmax = fn.trasf(penm)
ritf, risp, rifr, rimax = fn.trasf(rim)
sdtf, sdsp, sdfr, sdmax = fn.trasf(sdm)
textf, texsp, texfr, texmax = fn.trasf(texm)
uttf, utsp, utfr, utmax = fn.trasf(utm)
virtf, virsp, virfr, virmax = fn.trasf(virm)
wastf, wassp, wasfr, wasmax = fn.trasf(wasm)
wyotf, wyosp, wyofr, wyomax = fn.trasf(wyom)
'''
print('Periodo Alabama: ', int(1/alafr[alamax]))
print('Periodo Arizona: ', int(1/arifr[arimax]))
print('Periodo Arkansas: ', int(1/arkfr[arkmax]))
print('Periodo California: ', int(1/calfr[calmax]))
print('Periodo Colorado: ', int(1/colfr[colmax]))
print('Periodo Connecticut: ', int(1/confr[conmax]))
print('Periodo Delaware: ', int(1/delafr[delamax]))
print('Periodo District of Columbia: ', int(1/docfr[docmax]))
print('Periodo Florida: ', int(1/flofr[flomax]))
print('Periodo Georgia: ', int(1/geofr[geomax]))
print('Periodo Hawaii: ', int(1/hawfr[hawmax]))
print('Periodo Idaho: ', int(1/idafr[idamax]))
print('Periodo Illinois: ', int(1/illfr[illmax]))
print('Periodo Indiana: ', int(1/indfr[indmax]))
print('Periodo Iowa: ', int(1/iowfr[iowmax]))
print('Periodo Kansas: ', int(1/kanfr[kanmax]))
print('Periodo Kentucky: ', int(1/kenfr[kenmax]))
print('Periodo Louisiana: ', int(1/loufr[loumax]))
print('Periodo Maine: ', int(1/maifr[maimax]))
print('Periodo Maryland: ', int(1/marfr[marmax]))
print('Periodo Massachusetts: ', int(1/masfr[masmax]))
print('Periodo Minnesota: ', int(1/minnfr[minnmax]))
print('Periodo Missouri: ', int(1/misfr[mismax]))
print('Periodo Nevada: ', int(1/nevfr[nevmax]))
print('Periodo New Jersey: ', int(1/njfr[njmax]))
print('Periodo New Mexico: ', int(1/nmfr[nmmax]))
print('Periodo New York: ', int(1/nyfr[nymax]))
print('Periodo North Carolina: ', int(1/ncfr[ncmax]))
print('Periodo North Dakota: ', int(1/ndfr[ndmax]))
print('Periodo Ohio: ', int(1/ohfr[ohmax]))
print('Periodo Oklahoma: ', int(1/okfr[okmax]))
print('Periodo Oregon: ', int(1/orefr[oremax]))
print('Periodo Pennsylvania: ', int(1/penfr[penmax]))
print('Periodo Rhode Island: ', int(1/rifr[rimax]))
print('Periodo South Dakota: ', int(1/sdfr[sdmax]))
print('Periodo Texas: ', int(1/texfr[texmax]))
print('Periodo Utah: ', int(1/utfr[utmax]))
print('Periodo Virginia: ', int(1/virfr[virmax]))
print('Periodo Washington: ', int(1/wasfr[wasmax]))
print('Periodo Wyoming: ', int(1/wyofr[wyomax]))
'''
#filtro
alaf = fn.inv(alasp, 4e3, alatf, alam)
arif = fn.inv(arisp, 5e6, aritf, arim)
arkf = fn.inv(arksp, 5e5, arktf, arkm)
calf = fn.inv(calsp, 5e6, caltf, calm)
colf = fn.inv(colsp, 5e6, coltf, colm)
conf = fn.inv(consp, 5e5, contf, conm)
delaf = fn.inv(delasp, 5e5, delatf, delam)
docf = fn.inv(docsp, 5e6, doctf, docm)
flof = fn.inv(flosp, 5e5, flotf, flom)
geof = fn.inv(geosp, 5e5, geotf, geom)
hawf = fn.inv(hawsp, 5e4, hawtf, hawm)
idaf = fn.inv(idasp, 5e3, idatf, idam)
illf = fn.inv(illsp, 5e5, illtf, illm)
indf = fn.inv(indsp, 2e5, indtf, indm)
iowf = fn.inv(iowsp, 5e5, iowtf, iowm)
kanf = fn.inv(kansp, 5e5, kantf, kanm)
kenf = fn.inv(kensp, 15e3, kentf, kenm)
louf = fn.inv(lousp, 5e5, loutf, loum)
maif = fn.inv(maisp, 5e5, maitf, maim)
marf = fn.inv(marsp, 5e5, martf, marm)
masf = fn.inv(massp, 5e6, mastf, masm)
minnf = fn.inv(minnsp, 8e4, minntf, minnm)
misf = fn.inv(missp, 2e4, mistf, mism)
nevf = fn.inv(nevsp, 5e6, nevtf, nevm)
njf = fn.inv(njsp, 5e6, njtf, njm)
nmf = fn.inv(nmsp, 5e6, nmtf, nmm)
nyf = fn.inv(nysp, 5e6, nytf, nym)
ncf = fn.inv(ncsp, 5e5, nctf, ncm)
ndf = fn.inv(ndsp, 5e5, ndtf, ndm)
ohf = fn.inv(ohsp, 5e5, ohtf, ohm)
okf = fn.inv(oksp, 5e5, oktf, okm)
oref = fn.inv(oresp, 5e5, oretf, orem)
penf = fn.inv(pensp, 6e5, pentf, penm)
rif = fn.inv(risp, 2e5, ritf, rim)
sdf = fn.inv(sdsp, 5e5, sdtf, sdm)
texf = fn.inv(texsp, 5e5, textf, texm)
utf = fn.inv(utsp, 5e6, uttf, utm)
virf = fn.inv(virsp, 5e5, virtf, virm)
wasf = fn.inv(wassp, 2e3, wastf, wasm)
wyof = fn.inv(wyosp, 13e4, wyotf, wyom)

#grafici con dati originali e filtrati
'''
#regione 1: maine, new york, massachusetts, rhode island, connecticut
fig,ax = plt.subplots(5,1, figsize=(40,40))
ax[0].plot(maid, maim, color='forestgreen')
ax[0].plot(maid, maif, color='darkgreen')
ax[1].plot(nyd, nym, color='darkorange')
ax[1].plot(nyd, nyf, color='orangered')
ax[2].plot(masd, masm, color='mediumslateblue')
ax[2].plot(masd, masf, color='rebeccapurple')
ax[3].plot(rid, rim, color='mediumturquoise')
ax[3].plot(rid, rif, color='teal')
ax[4].plot(cond, conm, color='lightcoral')
ax[4].plot(cond, conf, color='firebrick')
ax[0].set_title('Maine', loc='left', y=0.75, x=0.02)
ax[1].set_title('New York', loc='left', y=0.75, x=0.02)
ax[2].set_title('Massachusetts', loc='left', y=0.75, x=0.02)
ax[3].set_title('Rhode Island', loc='left', y=0.75, x=0.02)
ax[4].set_title('Connecticut', loc='left', y=0.75, x=0.02)
fig.suptitle('media della densità di NO2 [$\mu g/m^3$] al giorno [d] in 5 stati confinanti, dati originali e filtrati')
plt.show()

#regione 2: pennsylvania, new jersey, maryland, delaware, district of columbia
fig,ax = plt.subplots(5,1, figsize=(40,40))
ax[0].plot(pend, penm, color='forestgreen')
ax[0].plot(pend, penf, color='darkgreen')
ax[1].plot(njd, njm, color='darkorange')
ax[1].plot(njd, njf, color='orangered')
ax[2].plot(mard, marm, color='mediumslateblue')
ax[2].plot(mard, marf, color='rebeccapurple')
ax[3].plot(delad, delam, color='mediumturquoise')
ax[3].plot(delad, delaf, color='teal')
ax[4].plot(docd, docm, color='lightcoral')
ax[4].plot(docd, docf, color='firebrick')
ax[0].set_title('Pennsylvania', loc='left', y=0.75, x=0.02)
ax[1].set_title('New Jersey', loc='left', y=0.75, x=0.02)
ax[2].set_title('Maryland', loc='left', y=0.75, x=0.02)
ax[3].set_title('Delaware', loc='left', y=0.75, x=0.02)
ax[4].set_title('District of Columbia', loc='left', y=0.75, x=0.02)
fig.suptitle('media della densità di NO2 [$\mu g/m^3$] al giorno [d] in 5 stati confinanti, dati originali e filtrati')
plt.show()

#regione 3: north carolina, georgia, alabama, virginia, florida
fig,ax = plt.subplots(5,1, figsize=(40,40))
ax[0].plot(ncd, ncm, color='forestgreen')
ax[0].plot(ncd, ncf, color='darkgreen')
ax[1].plot(geod, geom, color='darkorange')
ax[1].plot(geod, geof, color='orangered')
ax[2].plot(alad, alam, color='mediumslateblue')
ax[2].plot(alad, alaf, color='rebeccapurple')
ax[3].plot(vird, virm, color='mediumturquoise')
ax[3].plot(vird, virf, color='teal')
ax[4].plot(flod, flom, color='lightcoral')
ax[4].plot(flod, flof, color='firebrick')
ax[0].set_title('North Carolina', loc='left', y=0.75, x=0.02)
ax[1].set_title('Georgia', loc='left', y=0.75, x=0.02)
ax[2].set_title('Alabama', loc='left', y=0.75, x=0.02)
ax[3].set_title('Virginia', loc='left', y=0.75, x=0.02)
ax[4].set_title('Florida', loc='left', y=0.75, x=0.02)
fig.suptitle('media della densità di NO2 [$\mu g/m^3$] al giorno [d] in 5 stati confinanti, dati originali e filtrati')
plt.show()

#regione 4: ohio, indiana, kentucky, illinois, missouri
fig,ax = plt.subplots(5,1, figsize=(40,40))
ax[0].plot(ohd, ohm, color='forestgreen')
ax[0].plot(ohd, ohf, color='darkgreen')
ax[1].plot(indd, indm, color='darkorange')
ax[1].plot(indd, indf, color='orangered')
ax[2].plot(kend, kenm, color='mediumslateblue')
ax[2].plot(kend, kenf, color='rebeccapurple')
ax[3].plot(illd, illm, color='mediumturquoise')
ax[3].plot(illd, illf, color='teal')
ax[4].plot(misd, mism, color='lightcoral')
ax[4].plot(misd, misf, color='firebrick')
ax[0].set_title('Ohio', loc='left', y=0.75, x=0.02)
ax[1].set_title('Indiana', loc='left', y=0.75, x=0.02)
ax[2].set_title('Kentucky', loc='left', y=0.75, x=0.02)
ax[3].set_title('Illinois', loc='left', y=0.75, x=0.02)
ax[4].set_title('Missouri', loc='left', y=0.75, x=0.02)
fig.suptitle('media della densità di NO2 [$\mu g/m^3$] al giorno [d] in 5 stati confinanti, dati originali e filtrati')
plt.show()

#regione 5: wyoming, minnesota, iowa, north dakota, south dakota
fig,ax = plt.subplots(5,1, figsize=(40,40))
ax[0].plot(wyod, wyom, color='forestgreen')
ax[0].plot(wyod, wyof, color='darkgreen')
ax[1].plot(minnd, minnm, color='darkorange')
ax[1].plot(minnd, minnf, color='orangered')
ax[2].plot(iowd, iowm, color='mediumslateblue')
ax[2].plot(iowd, iowf, color='rebeccapurple')
ax[3].plot(ndd, ndm, color='mediumturquoise')
ax[3].plot(ndd, ndf, color='teal')
ax[4].plot(sdd, sdm, color='lightcoral')
ax[4].plot(sdd, sdf, color='firebrick')
ax[0].set_title('Wyoming', loc='left', y=0.75, x=0.02)
ax[1].set_title('Minnesota', loc='left', y=0.75, x=0.02)
ax[2].set_title('Iowa', loc='left', y=0.75, x=0.02)
ax[3].set_title('North Dakota', loc='left', y=0.75, x=0.02)
ax[4].set_title('South Dakota', loc='left', y=0.75, x=0.02)
fig.suptitle('media della densità di NO2 [$\mu g/m^3$] al giorno [d] in 5 stati confinanti, dati originali e filtrati')
plt.show()

#regione 6: louisiana, kansas, arkansas, oklahoma, texas
fig,ax = plt.subplots(5,1, figsize=(40,40))
ax[0].plot(loud, loum, color='forestgreen')
ax[0].plot(loud, louf, color='darkgreen')
ax[1].plot(kand, kanm, color='darkorange')
ax[1].plot(kand, kanf, color='orangered')
ax[2].plot(arkd, arkm, color='mediumslateblue')
ax[2].plot(arkd, arkf, color='rebeccapurple')
ax[3].plot(okd, okm, color='mediumturquoise')
ax[3].plot(okd, okf, color='teal')
ax[4].plot(texd, texm, color='lightcoral')
ax[4].plot(texd, texf, color='firebrick')
ax[0].set_title('Louisiana', loc='left', y=0.75, x=0.02)
ax[1].set_title('Kansas', loc='left', y=0.75, x=0.02)
ax[2].set_title('Arkansas', loc='left', y=0.75, x=0.02)
ax[3].set_title('Oklahoma', loc='left', y=0.75, x=0.02)
ax[4].set_title('Texas', loc='left', y=0.75, x=0.02)
fig.suptitle('media della densità di NO2 [$\mu g/m^3$] al giorno [d] in 5 stati confinanti, dati originali e filtrati')
plt.show()

#regione 7: colorado, nevada, utah, arizona, new mexico
fig,ax = plt.subplots(5,1, figsize=(40,40))
ax[0].plot(cold, colm, color='forestgreen')
ax[0].plot(cold, colf, color='darkgreen')
ax[1].plot(nevd, nevm, color='darkorange')
ax[1].plot(nevd, nevf, color='orangered')
ax[2].plot(utd, utm, color='mediumslateblue')
ax[2].plot(utd, utf, color='rebeccapurple')
ax[3].plot(arid, arim, color='mediumturquoise')
ax[3].plot(arid, arif, color='teal')
ax[4].plot(nmd, nmm, color='lightcoral')
ax[4].plot(nmd, nmf, color='firebrick')
ax[0].set_title('Colorado', loc='left', y=0.75, x=0.02)
ax[1].set_title('Nevada', loc='left', y=0.75, x=0.02)
ax[2].set_title('Utah', loc='left', y=0.75, x=0.02)
ax[3].set_title('Arizona', loc='left', y=0.75, x=0.02)
ax[4].set_title('New Mexico', loc='left', y=0.75, x=0.02)
fig.suptitle('media della densità di NO2 [$\mu g/m^3$] al giorno [d] in 5 stati confinanti, dati originali e filtrati')
plt.show()
'''
#regione 8: washington, oregon, idaho, california, hawaii
fig,ax = plt.subplots(5,1, figsize=(40,40))
ax[0].plot(wasd, wasm, color='forestgreen')
ax[0].plot(wasd, wasf, color='darkgreen')
ax[1].plot(ored, orem, color='darkorange')
ax[1].plot(ored, oref, color='orangered')
ax[2].plot(idad, idam, color='mediumslateblue')
ax[2].plot(idad, idaf, color='rebeccapurple')
ax[3].plot(cald, calm, color='mediumturquoise')
ax[3].plot(cald, calf, color='teal')
ax[4].plot(hawd, hawm, color='lightcoral')
ax[4].plot(hawd, hawf, color='firebrick')
ax[0].set_title('Washington', loc='left', y=0.75, x=0.02)
ax[1].set_title('Oregon', loc='left', y=0.75, x=0.02)
ax[2].set_title('Idaho', loc='left', y=0.75, x=0.02)
ax[3].set_title('California', loc='left', y=0.75, x=0.02)
ax[4].set_title('Hawaii', loc='left', y=0.75, x=0.02)
fig.suptitle('media della densità di NO2 [$\mu g/m^3$] al giorno [d] in 5 stati confinanti, dati originali e filtrati')
plt.show()
